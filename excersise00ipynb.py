# -*- coding: utf-8 -*-
"""excersise00ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OVDN4pzpYy6E4gMAe7ufYHTV0ZeYW_3R
"""

import torch
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
print(torch.__version__)

"""Create a random tensor with shape (7, 7)."""

random_tensor1 = torch.rand(size=(7, 7))
random_tensor1, random_tensor1.dtype

random_tensor2 = torch.rand(size=(7, 7))
random_tensor2, random_tensor2.dtype

"""
# Perform matrix multiplication 
"""

# Matrix multiplication
torch.matmul(random_tensor1, random_tensor2)

""" Set the random seed to 0 and do 2 & 3 over again."""



"""Create two random tensors of shape (2, 3) and send them both to the GPU (you'll need access to a GPU for this). Set torch.manual_seed(1234) when creating the tensors (this doesn't have to be the GPU random seed). The output should be something like:

# Set random seed
"""

torch.manual_seed(42)
random_tensor2 = torch.rand(size=(2, 3))
random_tensor2, random_tensor2.dtype

random_tensor3 = torch.rand(size=(3, 2))
random_tensor3, random_tensor3.dtype

#Set device type
device = "cuda" if torch.cuda.is_available() else "cpu"
device

# Move tensor to GPU (if available)
tensor_on_gpu = random_tensor3.to(device)
tensor_on_gpu

tensor_on_gpu1 = random_tensor2.to(device)
tensor_on_gpu1

torch.matmul(tensor_on_gpu1,tensor_on_gpu)

"""Find the maximum and minimum values of the output of 7."""

# Create a tensor
x = torch.arange(0, 100, 7)
x

print(f"Minimum: {x.min()}")
print(f"Maximum: {x.max()}")

x.argmax()

x.argmin()

torch.manual_seed(42)

# Set seed
torch.manual_seed(7)

# Create random tensor
tensor_D = torch.rand(size=(1, 1, 1, 10))

# Remove single dimensions
tensor_E = tensor_D.squeeze()

# Print out tensors
print(tensor_D, tensor_D.shape)
print(tensor_E, tensor_E.shape)